"use strict";(self.webpackChunkvibespec_docs=self.webpackChunkvibespec_docs||[]).push([[6536],{4211:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>c,contentTitle:()=>r,default:()=>l,frontMatter:()=>a,metadata:()=>i,toc:()=>p});const i=JSON.parse('{"id":"schemas/ui-intent","title":"UI Intent","description":"Stack-agnostic UI intent taxonomy so agents pick the right kind of component (purpose) without naming concrete widgets.","source":"@site/docs/schemas/ui-intent.schema.mdx","sourceDirName":"schemas","slug":"/schemas/ui-intent","permalink":"/schemas/ui-intent","draft":false,"unlisted":false,"editUrl":"https://github.com/andrew-goetz-com/vibespec/edit/main/website/docs/schemas/ui-intent.schema.mdx","tags":[{"inline":true,"label":"schema","permalink":"/tags/schema"},{"inline":true,"label":"v0.2.0","permalink":"/tags/v-0-2-0"}],"version":"current","frontMatter":{"id":"ui-intent","title":"UI Intent","description":"Stack-agnostic UI intent taxonomy so agents pick the right kind of component (purpose) without naming concrete widgets.","slug":"/schemas/ui-intent","tags":["schema","v0.2.0"]},"sidebar":"sidebar","previous":{"title":"UI Components","permalink":"/schemas/ui-components"},"next":{"title":"Workflow","permalink":"/schemas/workflow"}}');var s=t(4848),o=t(8453);const a={id:"ui-intent",title:"UI Intent",description:"Stack-agnostic UI intent taxonomy so agents pick the right kind of component (purpose) without naming concrete widgets.",slug:"/schemas/ui-intent",tags:["schema","v0.2.0"]},r=void 0,c={},p=[];function d(n){const e={a:"a",code:"code",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,o.R)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.p,{children:"Stack-agnostic UI intent taxonomy so agents pick the right kind of component (purpose) without naming concrete widgets."}),"\n",(0,s.jsxs)(e.table,{children:[(0,s.jsx)(e.thead,{children:(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.th,{children:"Field"}),(0,s.jsx)(e.th,{children:"Value"})]})}),(0,s.jsxs)(e.tbody,{children:[(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"$id"}),(0,s.jsx)(e.td,{children:(0,s.jsx)(e.code,{children:"https://vibespec.vibecodeunited.com/schema/ui-intent.schema.json"})})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"vibespecVersion"}),(0,s.jsx)(e.td,{children:(0,s.jsx)(e.code,{children:"0.2.0"})})]})]})]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.a,{href:"https://github.com/andrew-goetz-com/vibespec/blob/HEAD/schemas/ui-intent.schema.json",children:"View raw schema on GitHub"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "$id": "https://vibespec.vibecodeunited.com/schema/ui-intent.schema.json",\n  "$schema": "https://json-schema.org/draft/2020-12/schema",\n  "title": "UI Intent",\n  "vibespecVersion": "0.2.0",\n  "description": "Stack-agnostic UI intent taxonomy so agents pick the right kind of component (purpose) without naming concrete widgets.",\n  "type": "object",\n  "properties": {\n    "presets": {\n      "type": "array",\n      "description": "Optional library of named intents for reuse.",\n      "items": {\n        "$ref": "#/$defs/IntentUsage"\n      },\n      "default": []\n    },\n    "extensions": {\n      "type": "object"\n    }\n  },\n  "$defs": {\n    "IntentCategory": {\n      "type": "string",\n      "enum": [\n        "Navigation",\n        "Action",\n        "Input",\n        "Selection",\n        "Disclosure",\n        "Collection",\n        "Feedback",\n        "Content",\n        "Container",\n        "Media",\n        "DataViz",\n        "Utility"\n      ]\n    },\n    "IntentName": {\n      "type": "string",\n      "enum": [\n        "Navigation.Primary",\n        "Navigation.Secondary",\n        "Navigation.Breadcrumbs",\n        "Navigation.Sidebar",\n        "Navigation.Tabs",\n        "Action.Primary",\n        "Action.Secondary",\n        "Action.Tertiary",\n        "Action.Destructive",\n        "Input.Text.SingleLine",\n        "Input.Text.MultiLine",\n        "Input.Number",\n        "Input.Password",\n        "Input.Search",\n        "Input.Date",\n        "Input.Time",\n        "Input.Email",\n        "Input.URL",\n        "Input.Phone",\n        "Selection.Single",\n        "Selection.Multiple",\n        "Selection.Toggle",\n        "Selection.Binary",\n        "Selection.OptionGroup",\n        "Disclosure.Accordion",\n        "Disclosure.Tab",\n        "Disclosure.Tooltip",\n        "Disclosure.Popover",\n        "Disclosure.Modal",\n        "Disclosure.Drawer",\n        "Collection.List",\n        "Collection.Table",\n        "Collection.Grid",\n        "Collection.Cards",\n        "Collection.Tree",\n        "Feedback.Inline",\n        "Feedback.Toast",\n        "Feedback.Dialog",\n        "Feedback.Skeleton",\n        "Feedback.EmptyState",\n        "Feedback.Progress",\n        "Content.Heading",\n        "Content.Paragraph",\n        "Content.Code",\n        "Content.Quote",\n        "Content.Badge",\n        "Content.Avatar",\n        "Container.Surface",\n        "Container.Card",\n        "Container.Panel",\n        "Container.Section",\n        "Media.Image",\n        "Media.Video",\n        "Media.Icon",\n        "DataViz.Metric",\n        "DataViz.Sparkline",\n        "DataViz.Bar",\n        "DataViz.Line",\n        "DataViz.Pie",\n        "Utility.Search",\n        "Utility.Filter",\n        "Utility.Sort",\n        "Utility.Pagination",\n        "Utility.Toolbar"\n      ]\n    },\n    "Emphasis": {\n      "type": "string",\n      "enum": [\n        "high",\n        "medium",\n        "low"\n      ]\n    },\n    "Density": {\n      "type": "string",\n      "enum": [\n        "comfortable",\n        "compact",\n        "sparse"\n      ]\n    },\n    "HierarchyLevel": {\n      "type": "integer",\n      "minimum": 1,\n      "maximum": 6\n    },\n    "DataType": {\n      "type": "string",\n      "enum": [\n        "string",\n        "number",\n        "integer",\n        "float",\n        "date",\n        "datetime",\n        "time",\n        "email",\n        "url",\n        "phone",\n        "password",\n        "search"\n      ]\n    },\n    "FeedbackType": {\n      "type": "string",\n      "enum": [\n        "info",\n        "success",\n        "warning",\n        "error",\n        "loading",\n        "progress"\n      ]\n    },\n    "Multiplicity": {\n      "type": "string",\n      "enum": [\n        "single",\n        "multiple"\n      ]\n    },\n    "Affordance": {\n      "type": "string",\n      "enum": [\n        "click",\n        "tap",\n        "hover",\n        "drag",\n        "drop",\n        "keyboard",\n        "gesture"\n      ]\n    },\n    "Constraints": {\n      "type": "object",\n      "properties": {\n        "minLength": {\n          "type": "integer",\n          "minimum": 0\n        },\n        "maxLength": {\n          "type": "integer",\n          "minimum": 0\n        },\n        "min": {\n          "type": "number"\n        },\n        "max": {\n          "type": "number"\n        },\n        "step": {\n          "type": "number"\n        },\n        "precision": {\n          "type": "integer",\n          "minimum": 0\n        }\n      },\n      "additionalProperties": false\n    },\n    "IntentSpec": {\n      "type": "object",\n      "required": [\n        "name"\n      ],\n      "properties": {\n        "name": {\n          "$ref": "#/$defs/IntentName"\n        },\n        "category": {\n          "$ref": "#/$defs/IntentCategory"\n        },\n        "description": {\n          "type": "string"\n        },\n        "emphasis": {\n          "$ref": "#/$defs/Emphasis"\n        },\n        "hierarchy": {\n          "$ref": "#/$defs/HierarchyLevel"\n        },\n        "density": {\n          "$ref": "#/$defs/Density"\n        },\n        "affordances": {\n          "type": "array",\n          "items": {\n            "$ref": "#/$defs/Affordance"\n          }\n        },\n        "priority": {\n          "type": "number",\n          "minimum": 0,\n          "maximum": 100\n        },\n        "dataType": {\n          "$ref": "#/$defs/DataType"\n        },\n        "multiplicity": {\n          "$ref": "#/$defs/Multiplicity"\n        },\n        "constraints": {\n          "$ref": "#/$defs/Constraints"\n        },\n        "feedback": {\n          "$ref": "#/$defs/FeedbackType"\n        },\n        "mappingHints": {\n          "type": "array",\n          "description": "Optional adapter hints (e.g., \'button\',\'link\',\'iconButton\',\'select\'). Not part of the spec semantics.",\n          "items": {\n            "type": "string"\n          }\n        },\n        "extensions": {\n          "type": "object"\n        }\n      },\n      "additionalProperties": false\n    },\n    "IntentUsage": {\n      "type": "object",\n      "properties": {\n        "id": {\n          "type": "string"\n        },\n        "intent": {\n          "$ref": "#/$defs/IntentSpec"\n        },\n        "alternatives": {\n          "type": "array",\n          "items": {\n            "$ref": "#/$defs/IntentSpec"\n          }\n        }\n      },\n      "required": [\n        "intent"\n      ],\n      "additionalProperties": false\n    }\n  },\n  "additionalProperties": false\n}\n'})})]})}function l(n={}){const{wrapper:e}={...(0,o.R)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(d,{...n})}):d(n)}},8453:(n,e,t)=>{t.d(e,{R:()=>a,x:()=>r});var i=t(6540);const s={},o=i.createContext(s);function a(n){const e=i.useContext(o);return i.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function r(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:a(n.components),i.createElement(o.Provider,{value:e},n.children)}}}]);