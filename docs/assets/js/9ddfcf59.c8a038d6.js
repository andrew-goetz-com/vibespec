"use strict";(self.webpackChunkvibespec_docs=self.webpackChunkvibespec_docs||[]).push([[1363],{6514:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>p,contentTitle:()=>o,default:()=>l,frontMatter:()=>s,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"schemas/adapters","title":"Adapters","description":"Framework adapters that translate VibeSpec Core (brief, intent, tokens, layout, motion, a11y, interaction) into concrete stack outputs without constraining the spec.","source":"@site/docs/schemas/adapters.schema.mdx","sourceDirName":"schemas","slug":"/schemas/adapters","permalink":"/schemas/adapters","draft":false,"unlisted":false,"editUrl":"https://github.com/andrew-goetz-com/vibespec/edit/main/website/docs/schemas/adapters.schema.mdx","tags":[{"inline":true,"label":"schema","permalink":"/tags/schema"},{"inline":true,"label":"v0.2.0","permalink":"/tags/v-0-2-0"}],"version":"current","frontMatter":{"id":"adapters","title":"Adapters","description":"Framework adapters that translate VibeSpec Core (brief, intent, tokens, layout, motion, a11y, interaction) into concrete stack outputs without constraining the spec.","slug":"/schemas/adapters","tags":["schema","v0.2.0"]},"sidebar":"sidebar","previous":{"title":"Accessibility","permalink":"/schemas/accessibility"},"next":{"title":"Agent","permalink":"/schemas/agent"}}');var i=t(4848),r=t(8453);const s={id:"adapters",title:"Adapters",description:"Framework adapters that translate VibeSpec Core (brief, intent, tokens, layout, motion, a11y, interaction) into concrete stack outputs without constraining the spec.",slug:"/schemas/adapters",tags:["schema","v0.2.0"]},o=void 0,p={},d=[];function c(n){const e={a:"a",code:"code",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.p,{children:"Framework adapters that translate VibeSpec Core (brief, intent, tokens, layout, motion, a11y, interaction) into concrete stack outputs without constraining the spec."}),"\n",(0,i.jsxs)(e.table,{children:[(0,i.jsx)(e.thead,{children:(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.th,{children:"Field"}),(0,i.jsx)(e.th,{children:"Value"})]})}),(0,i.jsxs)(e.tbody,{children:[(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"$id"}),(0,i.jsx)(e.td,{children:(0,i.jsx)(e.code,{children:"https://vibespec.vibecodeunited.com/schema/adapters.schema.json"})})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"vibespecVersion"}),(0,i.jsx)(e.td,{children:(0,i.jsx)(e.code,{children:"0.2.0"})})]})]})]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.a,{href:"https://github.com/andrew-goetz-com/vibespec/blob/HEAD/schemas/adapters.schema.json",children:"View raw schema on GitHub"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-json",children:'{\n  "$id": "https://vibespec.vibecodeunited.com/schema/adapters.schema.json",\n  "$schema": "https://json-schema.org/draft/2020-12/schema",\n  "title": "Adapters",\n  "vibespecVersion": "0.2.0",\n  "description": "Framework adapters that translate VibeSpec Core (brief, intent, tokens, layout, motion, a11y, interaction) into concrete stack outputs without constraining the spec.",\n  "type": "object",\n  "properties": {\n    "adapters": {\n      "type": "array",\n      "items": {\n        "$ref": "#/$defs/Adapter"\n      },\n      "default": []\n    },\n    "extensions": {\n      "type": "object"\n    }\n  },\n  "required": [\n    "adapters"\n  ],\n  "$defs": {\n    "Target": {\n      "type": "string",\n      "enum": [\n        "react",\n        "react-native",\n        "vue",\n        "svelte",\n        "web-components",\n        "flutter",\n        "swiftui",\n        "android",\n        "solid",\n        "angular",\n        "generic"\n      ]\n    },\n    "Feature": {\n      "type": "string",\n      "enum": [\n        "intentOnly",\n        "reducedMotion",\n        "containerQueries",\n        "serverComponents",\n        "islands",\n        "ssr",\n        "csr",\n        "pwa",\n        "rtl",\n        "a11yAA",\n        "a11yAAA"\n      ]\n    },\n    "Adapter": {\n      "type": "object",\n      "required": [\n        "id",\n        "name",\n        "target"\n      ],\n      "properties": {\n        "id": {\n          "type": "string",\n          "description": "Unique adapter id (e.g., react-next-tailwind)."\n        },\n        "name": {\n          "type": "string"\n        },\n        "target": {\n          "$ref": "#/$defs/Target"\n        },\n        "version": {\n          "type": "string"\n        },\n        "priority": {\n          "type": "number",\n          "default": 0\n        },\n        "supports": {\n          "type": "array",\n          "items": {\n            "$ref": "#/$defs/Feature"\n          },\n          "default": []\n        },\n        "generators": {\n          "type": "object",\n          "properties": {\n            "cssVariables": {\n              "type": "boolean",\n              "default": true\n            },\n            "utilityConfig": {\n              "type": "string",\n              "enum": [\n                "tailwind",\n                "uno",\n                "none"\n              ],\n              "default": "tailwind"\n            },\n            "stories": {\n              "type": "boolean",\n              "default": true\n            },\n            "routes": {\n              "type": "boolean",\n              "default": true\n            }\n          },\n          "additionalProperties": false\n        },\n        "mapping": {\n          "$ref": "#/$defs/Mapping"\n        },\n        "extensions": {\n          "type": "object"\n        }\n      },\n      "additionalProperties": false\n    },\n    "Mapping": {\n      "type": "object",\n      "properties": {\n        "intentMap": {\n          "$ref": "#/$defs/IntentMap"\n        },\n        "variantMap": {\n          "type": "object",\n          "additionalProperties": {\n            "$ref": "#/$defs/VariantMapping"\n          }\n        },\n        "sizeMap": {\n          "type": "object",\n          "additionalProperties": {\n            "$ref": "#/$defs/SizeMapping"\n          }\n        },\n        "slotMap": {\n          "type": "object",\n          "additionalProperties": {\n            "$ref": "#/$defs/SlotMapping"\n          }\n        },\n        "layoutMap": {\n          "$ref": "#/$defs/LayoutMapping"\n        },\n        "motionMap": {\n          "$ref": "#/$defs/MotionMapping"\n        },\n        "a11yPolicy": {\n          "$ref": "#/$defs/A11yPolicy"\n        },\n        "actionMap": {\n          "$ref": "#/$defs/ActionMap"\n        },\n        "tokenEmit": {\n          "$ref": "#/$defs/TokenEmit"\n        }\n      },\n      "additionalProperties": false\n    },\n    "IntentMap": {\n      "type": "object",\n      "description": "Map intent names to adapter-specific component blueprints.",\n      "additionalProperties": {\n        "$ref": "#/$defs/ComponentBlueprint"\n      }\n    },\n    "ComponentBlueprint": {\n      "type": "object",\n      "required": [\n        "component"\n      ],\n      "properties": {\n        "component": {\n          "type": "string",\n          "description": "Adapter component identifier (e.g., Button, NavTabs)."\n        },\n        "library": {\n          "type": "string",\n          "description": "Optional library/package name (non-binding hint)."\n        },\n        "props": {\n          "type": "object",\n          "description": "Prop mapping rules from spec props to adapter props (dot-path expressions allowed).",\n          "additionalProperties": {\n            "type": "string"\n          }\n        },\n        "classList": {\n          "type": "array",\n          "items": {\n            "type": "string"\n          },\n          "default": []\n        },\n        "fallback": {\n          "type": "array",\n          "items": {\n            "$ref": "#/$defs/ComponentBlueprint"\n          },\n          "default": []\n        }\n      },\n      "additionalProperties": false\n    },\n    "VariantMapping": {\n      "type": "object",\n      "properties": {\n        "classList": {\n          "type": "array",\n          "items": {\n            "type": "string"\n          },\n          "default": []\n        },\n        "props": {\n          "type": "object",\n          "additionalProperties": {\n            "type": "string"\n          }\n        }\n      },\n      "additionalProperties": false\n    },\n    "SizeMapping": {\n      "$ref": "#/$defs/VariantMapping"\n    },\n    "SlotMapping": {\n      "$ref": "#/$defs/VariantMapping"\n    },\n    "LayoutMapping": {\n      "type": "object",\n      "description": "Mapping of layout primitives to adapter constructs (class utilities, style props, wrappers).",\n      "properties": {\n        "stack": {\n          "$ref": "#/$defs/VariantMapping"\n        },\n        "cluster": {\n          "$ref": "#/$defs/VariantMapping"\n        },\n        "grid": {\n          "$ref": "#/$defs/VariantMapping"\n        },\n        "frame": {\n          "$ref": "#/$defs/VariantMapping"\n        }\n      },\n      "additionalProperties": false\n    },\n    "MotionMapping": {\n      "type": "object",\n      "description": "Translation of MotionSpec into adapter animation lib configuration.",\n      "properties": {\n        "enter": {\n          "type": "object"\n        },\n        "exit": {\n          "type": "object"\n        },\n        "inView": {\n          "type": "object"\n        },\n        "reduced": {\n          "type": "object"\n        }\n      },\n      "additionalProperties": true\n    },\n    "A11yPolicy": {\n      "type": "object",\n      "properties": {\n        "focusVisible": {\n          "type": "boolean",\n          "default": true\n        },\n        "landmarksRequired": {\n          "type": "boolean",\n          "default": true\n        },\n        "contrastTarget": {\n          "type": "string",\n          "enum": [\n            "AA",\n            "AAA"\n          ],\n          "default": "AA"\n        },\n        "keyboardNavigation": {\n          "type": "boolean",\n          "default": true\n        }\n      },\n      "additionalProperties": false\n    },\n    "ActionMap": {\n      "type": "object",\n      "description": "Map action types to adapter runtime handlers.",\n      "additionalProperties": {\n        "type": "object",\n        "properties": {\n          "handler": {\n            "type": "string",\n            "description": "Adapter handler id or function name (descriptive)."\n          },\n          "argsMap": {\n            "type": "object",\n            "additionalProperties": {\n              "type": "string"\n            }\n          }\n        },\n        "additionalProperties": false\n      }\n    },\n    "TokenEmit": {\n      "type": "object",\n      "properties": {\n        "cssVariables": {\n          "type": "boolean",\n          "default": true\n        },\n        "prefix": {\n          "type": "string",\n          "default": "--vs-"\n        },\n        "utilityConfig": {\n          "type": "object",\n          "description": "Utility framework config output mapping (e.g., Tailwind theme keys)",\n          "properties": {\n            "colors": {\n              "type": "boolean",\n              "default": true\n            },\n            "spacing": {\n              "type": "boolean",\n              "default": true\n            },\n            "radius": {\n              "type": "boolean",\n              "default": true\n            },\n            "shadow": {\n              "type": "boolean",\n              "default": true\n            },\n            "zIndex": {\n              "type": "boolean",\n              "default": true\n            },\n            "breakpoints": {\n              "type": "boolean",\n              "default": true\n            }\n          },\n          "additionalProperties": false\n        }\n      },\n      "additionalProperties": false\n    }\n  },\n  "additionalProperties": false\n}\n'})})]})}function l(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(c,{...n})}):c(n)}},8453:(n,e,t)=>{t.d(e,{R:()=>s,x:()=>o});var a=t(6540);const i={},r=a.createContext(i);function s(n){const e=a.useContext(r);return a.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function o(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:s(n.components),a.createElement(r.Provider,{value:e},n.children)}}}]);