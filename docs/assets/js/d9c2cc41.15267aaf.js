"use strict";(self.webpackChunkvibespec_docs=self.webpackChunkvibespec_docs||[]).push([[6546],{1709:e=>{e.exports=JSON.parse('{"tag":{"label":"v0.2.0","permalink":"/tags/v-0-2-0","allTagsPath":"/tags","count":9,"items":[{"id":"schemas/accessibility","title":"Accessibility","description":"Stack-agnostic accessibility model: roles, ARIA, landmarks, labels, keyboard maps, focus management, and contrast targets.","permalink":"/schemas/accessibility"},{"id":"schemas/adapters","title":"Adapters","description":"Framework adapters that translate VibeSpec Core (brief, intent, tokens, layout, motion, a11y, interaction) into concrete stack outputs without constraining the spec.","permalink":"/schemas/adapters"},{"id":"schemas/design-tokens","title":"Design Tokens","description":"Stack-agnostic design tokens following W3C Design Tokens format with themes/modes/brands and aliasing.","permalink":"/schemas/design-tokens"},{"id":"schemas/interaction","title":"Interaction","description":"Stack-agnostic interaction model: events, guards, typed actions, keyboard and gesture mappings, and optional async state hooks.","permalink":"/schemas/interaction"},{"id":"schemas/layout","title":"Layout","description":"Stack-agnostic layout primitives: stack/cluster/grid/frame with constraints, alignment, gaps, and responsive overrides.","permalink":"/schemas/layout"},{"id":"schemas/motion","title":"Motion","description":"Stack-agnostic motion model: transitions (tween/spring/keyframes), choreography (stagger/order/overlap), presets, and reduced-motion behavior.","permalink":"/schemas/motion"},{"id":"schemas/ui-brief","title":"UI Brief","description":"High-level, stack-agnostic guidance that expresses goals and freedoms so agents can design modern or cutting-edge UIs without enumerating specific widgets or stacks.","permalink":"/schemas/ui-brief"},{"id":"schemas/ui-components","title":"UI Components","description":"Stack-agnostic UI spec for pages, sections, components, props, variants, states, motion, interactions, responsiveness, and accessibility.","permalink":"/schemas/ui-components"},{"id":"schemas/ui-intent","title":"UI Intent","description":"Stack-agnostic UI intent taxonomy so agents pick the right kind of component (purpose) without naming concrete widgets.","permalink":"/schemas/ui-intent"}],"unlisted":false}}')}}]);